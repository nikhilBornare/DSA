283. Move Zeroes
Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.
Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]

class Solution {
    public void moveZeroes(int[] nums) {
        int zero = -1;

        // Find the first zero in the array
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) {
                zero = i;
                break;
            }
        }
        // If no zero is found, return as the array is already fine
        if (zero == -1) return;

        // Move non-zero elements to the left of the first zero found
        for (int i = zero + 1; i < nums.length; i++) {
            if (nums[i] != 0) {
                // Swap nums[i] and nums[zero]
                int temp = nums[i];
                nums[i] = nums[zero];
                nums[zero] = temp;
                zero++;
            }
        }
    }
}
